grammar org.mondo.collaboration.security.macl.xtext.AccessControlLanguage with org.eclipse.xtext.common.Terminals

import "platform:/resource/org.eclipse.incquery.patternlanguage/model/generated/PatternLanguage.ecore" as iql
import "http://www.eclipse.org/emf/2002/Ecore" as ecore


generate mondoAccessControlLanguage "http://www.collab.mondo/security/macl/xtext/SecurityAccess"

AccessControlModel:
	roles+=Role*
	policy=Policy
;

Role:
	User | Group
;

User:
	'user' name=ID
;

Group:
	'group' name=ID '{'  users+=[User]* '}'
;

Policy:
	'policy' name=ID type=ConflictResolutionTypes roles+=[Role]+
	'{' 
		imports+=ImportResource*
		rules+=Rule*
	'}' 
;

Rule:
	'rule' name=ID type=RuleType rights=RuleRights 'to' roles+=[Role]+
	'{'		
		'query' pattern=[iql::Pattern|STRING] ';'?
		bindings+=Binding*
		
	'}'
;

Binding:
	'bind' param=[iql::Variable] value=Bind
;

Bind:
	ObjectBind | ValueBind | RoleBind
;

RoleBind:
	'r=' role=[Role]
;

ValueBind:
	'v=' value=STRING
;

ObjectBind:
	'o=' object=[ecore::EObject]
;

ImportResource:
	'resource' importURI=STRING ';'?
;

enum RuleRights:
	Read = 'R' | Write = 'W' | ReadWrite = 'RW'
;

enum RuleType:
	Deny = 'deny' | Permit = 'permit'
;

enum ConflictResolutionTypes:
	DenyOverrides = 'deny-overrides' |
	PermitOverrides = 'permit-overrides' |
	FirstApplicable = 'first-applicable' |
	OnlyOneApplicablePolicy = 'only-one-applicable-policy' |
	OrderedDenyOverrides = 'ordered-deny-overrides' |
	OrderedPermitOverrides = 'ordered-permit-overrides' |
	DenyUnlessPermit = 'deny-unless-permit' |
	PermitUnlessDeny = 'permit-unless-permit'
;