/*
* generated by Xtext
*/
package hu.bme.mit.ftsrg.mondo.accesscontrol.policydsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class PolicyGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Assignment cElementsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cElementsElementsParserRuleCall_0 = (RuleCall)cElementsAssignment.eContents().get(0);
		
		//Model:
		//	elements+=Elements*;
		public ParserRule getRule() { return rule; }

		//elements+=Elements*
		public Assignment getElementsAssignment() { return cElementsAssignment; }

		//Elements
		public RuleCall getElementsElementsParserRuleCall_0() { return cElementsElementsParserRuleCall_0; }
	}

	public class PolicyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Policy");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPolicyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2_1 = (UnorderedGroup)cGroup_2.eContents().get(1);
		private final Group cGroup_2_1_0 = (Group)cUnorderedGroup_2_1.eContents().get(0);
		private final Keyword cPermissionKeyword_2_1_0_0 = (Keyword)cGroup_2_1_0.eContents().get(0);
		private final Assignment cPermissionAssignment_2_1_0_1 = (Assignment)cGroup_2_1_0.eContents().get(1);
		private final RuleCall cPermissionPermissionTypeEnumRuleCall_2_1_0_1_0 = (RuleCall)cPermissionAssignment_2_1_0_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_1_0_2 = (Keyword)cGroup_2_1_0.eContents().get(2);
		private final Group cGroup_2_1_1 = (Group)cUnorderedGroup_2_1.eContents().get(1);
		private final Keyword cQueryKeyword_2_1_1_0 = (Keyword)cGroup_2_1_1.eContents().get(0);
		private final Assignment cQueryAssignment_2_1_1_1 = (Assignment)cGroup_2_1_1.eContents().get(1);
		private final RuleCall cQuerySTRINGTerminalRuleCall_2_1_1_1_0 = (RuleCall)cQueryAssignment_2_1_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_1_1_2 = (Keyword)cGroup_2_1_1.eContents().get(2);
		private final Group cGroup_2_1_2 = (Group)cUnorderedGroup_2_1.eContents().get(2);
		private final Keyword cPatternKeyword_2_1_2_0 = (Keyword)cGroup_2_1_2.eContents().get(0);
		private final Assignment cPatternAssignment_2_1_2_1 = (Assignment)cGroup_2_1_2.eContents().get(1);
		private final RuleCall cPatternSTRINGTerminalRuleCall_2_1_2_1_0 = (RuleCall)cPatternAssignment_2_1_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2_1_2_2 = (Keyword)cGroup_2_1_2.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		
		//Policy:
		//	"Policy" name=ID ("{" ("permission" permission=PermissionType ";" & "query" query=STRING ";" & "pattern"
		//	pattern=STRING ";") "}");
		public ParserRule getRule() { return rule; }

		//"Policy" name=ID ("{" ("permission" permission=PermissionType ";" & "query" query=STRING ";" & "pattern" pattern=STRING
		//";") "}")
		public Group getGroup() { return cGroup; }

		//"Policy"
		public Keyword getPolicyKeyword_0() { return cPolicyKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{" ("permission" permission=PermissionType ";" & "query" query=STRING ";" & "pattern" pattern=STRING ";") "}"
		public Group getGroup_2() { return cGroup_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//"permission" permission=PermissionType ";" & "query" query=STRING ";" & "pattern" pattern=STRING ";"
		public UnorderedGroup getUnorderedGroup_2_1() { return cUnorderedGroup_2_1; }

		//"permission" permission=PermissionType ";"
		public Group getGroup_2_1_0() { return cGroup_2_1_0; }

		//"permission"
		public Keyword getPermissionKeyword_2_1_0_0() { return cPermissionKeyword_2_1_0_0; }

		//permission=PermissionType
		public Assignment getPermissionAssignment_2_1_0_1() { return cPermissionAssignment_2_1_0_1; }

		//PermissionType
		public RuleCall getPermissionPermissionTypeEnumRuleCall_2_1_0_1_0() { return cPermissionPermissionTypeEnumRuleCall_2_1_0_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2_1_0_2() { return cSemicolonKeyword_2_1_0_2; }

		//"query" query=STRING ";"
		public Group getGroup_2_1_1() { return cGroup_2_1_1; }

		//"query"
		public Keyword getQueryKeyword_2_1_1_0() { return cQueryKeyword_2_1_1_0; }

		//query=STRING
		public Assignment getQueryAssignment_2_1_1_1() { return cQueryAssignment_2_1_1_1; }

		//STRING
		public RuleCall getQuerySTRINGTerminalRuleCall_2_1_1_1_0() { return cQuerySTRINGTerminalRuleCall_2_1_1_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2_1_1_2() { return cSemicolonKeyword_2_1_1_2; }

		//"pattern" pattern=STRING ";"
		public Group getGroup_2_1_2() { return cGroup_2_1_2; }

		//"pattern"
		public Keyword getPatternKeyword_2_1_2_0() { return cPatternKeyword_2_1_2_0; }

		//pattern=STRING
		public Assignment getPatternAssignment_2_1_2_1() { return cPatternAssignment_2_1_2_1; }

		//STRING
		public RuleCall getPatternSTRINGTerminalRuleCall_2_1_2_1_0() { return cPatternSTRINGTerminalRuleCall_2_1_2_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2_1_2_2() { return cSemicolonKeyword_2_1_2_2; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_2() { return cRightCurlyBracketKeyword_2_2; }
	}

	public class AssociationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Association");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAssociationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cTesztAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cTesztSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cTesztAssignment_1_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1_2 = (UnorderedGroup)cGroup_1.eContents().get(2);
		private final Group cGroup_1_2_0 = (Group)cUnorderedGroup_1_2.eContents().get(0);
		private final Keyword cDefaultPermissionKeyword_1_2_0_0 = (Keyword)cGroup_1_2_0.eContents().get(0);
		private final Assignment cDefaultPermissionAssignment_1_2_0_1 = (Assignment)cGroup_1_2_0.eContents().get(1);
		private final RuleCall cDefaultPermissionPermissionTypeEnumRuleCall_1_2_0_1_0 = (RuleCall)cDefaultPermissionAssignment_1_2_0_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_2_0_2 = (Keyword)cGroup_1_2_0.eContents().get(2);
		private final Group cGroup_1_2_1 = (Group)cUnorderedGroup_1_2.eContents().get(1);
		private final Keyword cOverrideKeyword_1_2_1_0 = (Keyword)cGroup_1_2_1.eContents().get(0);
		private final Assignment cOverrideAssignment_1_2_1_1 = (Assignment)cGroup_1_2_1.eContents().get(1);
		private final RuleCall cOverridePermissionTypeEnumRuleCall_1_2_1_1_0 = (RuleCall)cOverrideAssignment_1_2_1_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_2_1_2 = (Keyword)cGroup_1_2_1.eContents().get(2);
		private final Group cGroup_1_2_2 = (Group)cUnorderedGroup_1_2.eContents().get(2);
		private final Keyword cTargetKeyword_1_2_2_0 = (Keyword)cGroup_1_2_2.eContents().get(0);
		private final Assignment cTargetAssignment_1_2_2_1 = (Assignment)cGroup_1_2_2.eContents().get(1);
		private final RuleCall cTargetTargetTypeEnumRuleCall_1_2_2_1_0 = (RuleCall)cTargetAssignment_1_2_2_1.eContents().get(0);
		private final Keyword cFullStopKeyword_1_2_2_2 = (Keyword)cGroup_1_2_2.eContents().get(2);
		private final Assignment cTarget_idAssignment_1_2_2_3 = (Assignment)cGroup_1_2_2.eContents().get(3);
		private final RuleCall cTarget_idSTRINGTerminalRuleCall_1_2_2_3_0 = (RuleCall)cTarget_idAssignment_1_2_2_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_2_2_4 = (Keyword)cGroup_1_2_2.eContents().get(4);
		private final Group cGroup_1_2_3 = (Group)cUnorderedGroup_1_2.eContents().get(3);
		private final Keyword cPoliciesKeyword_1_2_3_0 = (Keyword)cGroup_1_2_3.eContents().get(0);
		private final Assignment cPoliciesAssignment_1_2_3_1 = (Assignment)cGroup_1_2_3.eContents().get(1);
		private final CrossReference cPoliciesPolicyCrossReference_1_2_3_1_0 = (CrossReference)cPoliciesAssignment_1_2_3_1.eContents().get(0);
		private final RuleCall cPoliciesPolicyIDTerminalRuleCall_1_2_3_1_0_1 = (RuleCall)cPoliciesPolicyCrossReference_1_2_3_1_0.eContents().get(1);
		private final Group cGroup_1_2_3_2 = (Group)cGroup_1_2_3.eContents().get(2);
		private final Keyword cCommaKeyword_1_2_3_2_0 = (Keyword)cGroup_1_2_3_2.eContents().get(0);
		private final Assignment cPoliciesAssignment_1_2_3_2_1 = (Assignment)cGroup_1_2_3_2.eContents().get(1);
		private final CrossReference cPoliciesPolicyCrossReference_1_2_3_2_1_0 = (CrossReference)cPoliciesAssignment_1_2_3_2_1.eContents().get(0);
		private final RuleCall cPoliciesPolicyIDTerminalRuleCall_1_2_3_2_1_0_1 = (RuleCall)cPoliciesPolicyCrossReference_1_2_3_2_1_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_2_3_3 = (Keyword)cGroup_1_2_3.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//Association:
		//	"Association" ("{" teszt=STRING? (("defaultPermission" defaultPermission=PermissionType ";")? & "override"
		//	override=PermissionType ";" & "target" target=TargetType "." target_id=STRING ";" & "policies" policies+=[Policy]
		//	("," policies+=[Policy])* ";") "}");
		public ParserRule getRule() { return rule; }

		//"Association" ("{" teszt=STRING? (("defaultPermission" defaultPermission=PermissionType ";")? & "override"
		//override=PermissionType ";" & "target" target=TargetType "." target_id=STRING ";" & "policies" policies+=[Policy] (","
		//policies+=[Policy])* ";") "}")
		public Group getGroup() { return cGroup; }

		//"Association"
		public Keyword getAssociationKeyword_0() { return cAssociationKeyword_0; }

		//"{" teszt=STRING? (("defaultPermission" defaultPermission=PermissionType ";")? & "override" override=PermissionType ";"
		//& "target" target=TargetType "." target_id=STRING ";" & "policies" policies+=[Policy] ("," policies+=[Policy])* ";")
		//"}"
		public Group getGroup_1() { return cGroup_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }

		//teszt=STRING?
		public Assignment getTesztAssignment_1_1() { return cTesztAssignment_1_1; }

		//STRING
		public RuleCall getTesztSTRINGTerminalRuleCall_1_1_0() { return cTesztSTRINGTerminalRuleCall_1_1_0; }

		//("defaultPermission" defaultPermission=PermissionType ";")? & "override" override=PermissionType ";" & "target"
		//target=TargetType "." target_id=STRING ";" & "policies" policies+=[Policy] ("," policies+=[Policy])* ";"
		public UnorderedGroup getUnorderedGroup_1_2() { return cUnorderedGroup_1_2; }

		//("defaultPermission" defaultPermission=PermissionType ";")?
		public Group getGroup_1_2_0() { return cGroup_1_2_0; }

		//"defaultPermission"
		public Keyword getDefaultPermissionKeyword_1_2_0_0() { return cDefaultPermissionKeyword_1_2_0_0; }

		//defaultPermission=PermissionType
		public Assignment getDefaultPermissionAssignment_1_2_0_1() { return cDefaultPermissionAssignment_1_2_0_1; }

		//PermissionType
		public RuleCall getDefaultPermissionPermissionTypeEnumRuleCall_1_2_0_1_0() { return cDefaultPermissionPermissionTypeEnumRuleCall_1_2_0_1_0; }

		//";"
		public Keyword getSemicolonKeyword_1_2_0_2() { return cSemicolonKeyword_1_2_0_2; }

		//"override" override=PermissionType ";"
		public Group getGroup_1_2_1() { return cGroup_1_2_1; }

		//"override"
		public Keyword getOverrideKeyword_1_2_1_0() { return cOverrideKeyword_1_2_1_0; }

		//override=PermissionType
		public Assignment getOverrideAssignment_1_2_1_1() { return cOverrideAssignment_1_2_1_1; }

		//PermissionType
		public RuleCall getOverridePermissionTypeEnumRuleCall_1_2_1_1_0() { return cOverridePermissionTypeEnumRuleCall_1_2_1_1_0; }

		//";"
		public Keyword getSemicolonKeyword_1_2_1_2() { return cSemicolonKeyword_1_2_1_2; }

		//"target" target=TargetType "." target_id=STRING ";"
		public Group getGroup_1_2_2() { return cGroup_1_2_2; }

		//"target"
		public Keyword getTargetKeyword_1_2_2_0() { return cTargetKeyword_1_2_2_0; }

		//target=TargetType
		public Assignment getTargetAssignment_1_2_2_1() { return cTargetAssignment_1_2_2_1; }

		//TargetType
		public RuleCall getTargetTargetTypeEnumRuleCall_1_2_2_1_0() { return cTargetTargetTypeEnumRuleCall_1_2_2_1_0; }

		//"."
		public Keyword getFullStopKeyword_1_2_2_2() { return cFullStopKeyword_1_2_2_2; }

		//target_id=STRING
		public Assignment getTarget_idAssignment_1_2_2_3() { return cTarget_idAssignment_1_2_2_3; }

		//STRING
		public RuleCall getTarget_idSTRINGTerminalRuleCall_1_2_2_3_0() { return cTarget_idSTRINGTerminalRuleCall_1_2_2_3_0; }

		//";"
		public Keyword getSemicolonKeyword_1_2_2_4() { return cSemicolonKeyword_1_2_2_4; }

		//"policies" policies+=[Policy] ("," policies+=[Policy])* ";"
		public Group getGroup_1_2_3() { return cGroup_1_2_3; }

		//"policies"
		public Keyword getPoliciesKeyword_1_2_3_0() { return cPoliciesKeyword_1_2_3_0; }

		//policies+=[Policy]
		public Assignment getPoliciesAssignment_1_2_3_1() { return cPoliciesAssignment_1_2_3_1; }

		//[Policy]
		public CrossReference getPoliciesPolicyCrossReference_1_2_3_1_0() { return cPoliciesPolicyCrossReference_1_2_3_1_0; }

		//ID
		public RuleCall getPoliciesPolicyIDTerminalRuleCall_1_2_3_1_0_1() { return cPoliciesPolicyIDTerminalRuleCall_1_2_3_1_0_1; }

		//("," policies+=[Policy])*
		public Group getGroup_1_2_3_2() { return cGroup_1_2_3_2; }

		//","
		public Keyword getCommaKeyword_1_2_3_2_0() { return cCommaKeyword_1_2_3_2_0; }

		//policies+=[Policy]
		public Assignment getPoliciesAssignment_1_2_3_2_1() { return cPoliciesAssignment_1_2_3_2_1; }

		//[Policy]
		public CrossReference getPoliciesPolicyCrossReference_1_2_3_2_1_0() { return cPoliciesPolicyCrossReference_1_2_3_2_1_0; }

		//ID
		public RuleCall getPoliciesPolicyIDTerminalRuleCall_1_2_3_2_1_0_1() { return cPoliciesPolicyIDTerminalRuleCall_1_2_3_2_1_0_1; }

		//";"
		public Keyword getSemicolonKeyword_1_2_3_3() { return cSemicolonKeyword_1_2_3_3; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_1_3() { return cRightCurlyBracketKeyword_1_3; }
	}

	public class ElementsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Elements");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPolicyParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAssociationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Elements:
		//	Policy | Association;
		public ParserRule getRule() { return rule; }

		//Policy | Association
		public Alternatives getAlternatives() { return cAlternatives; }

		//Policy
		public RuleCall getPolicyParserRuleCall_0() { return cPolicyParserRuleCall_0; }

		//Association
		public RuleCall getAssociationParserRuleCall_1() { return cAssociationParserRuleCall_1; }
	}
	
	
	public class PermissionTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "PermissionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cUNSETEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cUNSETUNSETKeyword_0_0 = (Keyword)cUNSETEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDENYEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDENYDENYKeyword_1_0 = (Keyword)cDENYEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cALLOWEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cALLOWALLOWKeyword_2_0 = (Keyword)cALLOWEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum PermissionType:
		//	UNSET | DENY | ALLOW;
		public EnumRule getRule() { return rule; }

		//UNSET | DENY | ALLOW
		public Alternatives getAlternatives() { return cAlternatives; }

		//UNSET
		public EnumLiteralDeclaration getUNSETEnumLiteralDeclaration_0() { return cUNSETEnumLiteralDeclaration_0; }

		//"UNSET"
		public Keyword getUNSETUNSETKeyword_0_0() { return cUNSETUNSETKeyword_0_0; }

		//DENY
		public EnumLiteralDeclaration getDENYEnumLiteralDeclaration_1() { return cDENYEnumLiteralDeclaration_1; }

		//"DENY"
		public Keyword getDENYDENYKeyword_1_0() { return cDENYDENYKeyword_1_0; }

		//ALLOW
		public EnumLiteralDeclaration getALLOWEnumLiteralDeclaration_2() { return cALLOWEnumLiteralDeclaration_2; }

		//"ALLOW"
		public Keyword getALLOWALLOWKeyword_2_0() { return cALLOWALLOWKeyword_2_0; }
	}

	public class TargetTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "TargetType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cGROUPEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cGROUPGROUPKeyword_0_0 = (Keyword)cGROUPEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cUSEREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cUSERUSERKeyword_1_0 = (Keyword)cUSEREnumLiteralDeclaration_1.eContents().get(0);
		
		//enum TargetType:
		//	GROUP | USER;
		public EnumRule getRule() { return rule; }

		//GROUP | USER
		public Alternatives getAlternatives() { return cAlternatives; }

		//GROUP
		public EnumLiteralDeclaration getGROUPEnumLiteralDeclaration_0() { return cGROUPEnumLiteralDeclaration_0; }

		//"GROUP"
		public Keyword getGROUPGROUPKeyword_0_0() { return cGROUPGROUPKeyword_0_0; }

		//USER
		public EnumLiteralDeclaration getUSEREnumLiteralDeclaration_1() { return cUSEREnumLiteralDeclaration_1; }

		//"USER"
		public Keyword getUSERUSERKeyword_1_0() { return cUSERUSERKeyword_1_0; }
	}
	
	private final ModelElements pModel;
	private final PolicyElements pPolicy;
	private final AssociationElements pAssociation;
	private final ElementsElements pElements;
	private final PermissionTypeElements unknownRulePermissionType;
	private final TargetTypeElements unknownRuleTargetType;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public PolicyGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pPolicy = new PolicyElements();
		this.pAssociation = new AssociationElements();
		this.pElements = new ElementsElements();
		this.unknownRulePermissionType = new PermissionTypeElements();
		this.unknownRuleTargetType = new TargetTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("hu.bme.mit.ftsrg.mondo.accesscontrol.policydsl.Policy".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	elements+=Elements*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//Policy:
	//	"Policy" name=ID ("{" ("permission" permission=PermissionType ";" & "query" query=STRING ";" & "pattern"
	//	pattern=STRING ";") "}");
	public PolicyElements getPolicyAccess() {
		return pPolicy;
	}
	
	public ParserRule getPolicyRule() {
		return getPolicyAccess().getRule();
	}

	//Association:
	//	"Association" ("{" teszt=STRING? (("defaultPermission" defaultPermission=PermissionType ";")? & "override"
	//	override=PermissionType ";" & "target" target=TargetType "." target_id=STRING ";" & "policies" policies+=[Policy]
	//	("," policies+=[Policy])* ";") "}");
	public AssociationElements getAssociationAccess() {
		return pAssociation;
	}
	
	public ParserRule getAssociationRule() {
		return getAssociationAccess().getRule();
	}

	//Elements:
	//	Policy | Association;
	public ElementsElements getElementsAccess() {
		return pElements;
	}
	
	public ParserRule getElementsRule() {
		return getElementsAccess().getRule();
	}

	//enum PermissionType:
	//	UNSET | DENY | ALLOW;
	public PermissionTypeElements getPermissionTypeAccess() {
		return unknownRulePermissionType;
	}
	
	public EnumRule getPermissionTypeRule() {
		return getPermissionTypeAccess().getRule();
	}

	//enum TargetType:
	//	GROUP | USER;
	public TargetTypeElements getTargetTypeAccess() {
		return unknownRuleTargetType;
	}
	
	public EnumRule getTargetTypeRule() {
		return getTargetTypeAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
