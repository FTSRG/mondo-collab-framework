/*
 * generated by Xtext
 */
grammar InternalSecurityAccess;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.mondo.collaboration.security.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.mondo.collaboration.security.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.mondo.collaboration.security.xtext.services.SecurityAccessGrammarAccess;

}

@parser::members {
 
 	private SecurityAccessGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SecurityAccessGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleAccessControlModel
entryRuleAccessControlModel 
:
{ before(grammarAccess.getAccessControlModelRule()); }
	 ruleAccessControlModel
{ after(grammarAccess.getAccessControlModelRule()); } 
	 EOF 
;

// Rule AccessControlModel
ruleAccessControlModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAccessControlModelAccess().getGroup()); }
(rule__AccessControlModel__Group__0)
{ after(grammarAccess.getAccessControlModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRole
entryRuleRole 
:
{ before(grammarAccess.getRoleRule()); }
	 ruleRole
{ after(grammarAccess.getRoleRule()); } 
	 EOF 
;

// Rule Role
ruleRole
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRoleAccess().getAlternatives()); }
(rule__Role__Alternatives)
{ after(grammarAccess.getRoleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUser
entryRuleUser 
:
{ before(grammarAccess.getUserRule()); }
	 ruleUser
{ after(grammarAccess.getUserRule()); } 
	 EOF 
;

// Rule User
ruleUser
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUserAccess().getGroup()); }
(rule__User__Group__0)
{ after(grammarAccess.getUserAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGroup
entryRuleGroup 
:
{ before(grammarAccess.getGroupRule()); }
	 ruleGroup
{ after(grammarAccess.getGroupRule()); } 
	 EOF 
;

// Rule Group
ruleGroup
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGroupAccess().getGroup()); }
(rule__Group__Group__0)
{ after(grammarAccess.getGroupAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePolicy
entryRulePolicy 
:
{ before(grammarAccess.getPolicyRule()); }
	 rulePolicy
{ after(grammarAccess.getPolicyRule()); } 
	 EOF 
;

// Rule Policy
rulePolicy
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPolicyAccess().getGroup()); }
(rule__Policy__Group__0)
{ after(grammarAccess.getPolicyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRule
entryRuleRule 
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRuleAccess().getGroup()); }
(rule__Rule__Group__0)
{ after(grammarAccess.getRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinding
entryRuleBinding 
:
{ before(grammarAccess.getBindingRule()); }
	 ruleBinding
{ after(grammarAccess.getBindingRule()); } 
	 EOF 
;

// Rule Binding
ruleBinding
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBindingAccess().getGroup()); }
(rule__Binding__Group__0)
{ after(grammarAccess.getBindingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBind
entryRuleBind 
:
{ before(grammarAccess.getBindRule()); }
	 ruleBind
{ after(grammarAccess.getBindRule()); } 
	 EOF 
;

// Rule Bind
ruleBind
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBindAccess().getAlternatives()); }
(rule__Bind__Alternatives)
{ after(grammarAccess.getBindAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRoleBind
entryRuleRoleBind 
:
{ before(grammarAccess.getRoleBindRule()); }
	 ruleRoleBind
{ after(grammarAccess.getRoleBindRule()); } 
	 EOF 
;

// Rule RoleBind
ruleRoleBind
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRoleBindAccess().getGroup()); }
(rule__RoleBind__Group__0)
{ after(grammarAccess.getRoleBindAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueBind
entryRuleValueBind 
:
{ before(grammarAccess.getValueBindRule()); }
	 ruleValueBind
{ after(grammarAccess.getValueBindRule()); } 
	 EOF 
;

// Rule ValueBind
ruleValueBind
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueBindAccess().getGroup()); }
(rule__ValueBind__Group__0)
{ after(grammarAccess.getValueBindAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectBind
entryRuleObjectBind 
:
{ before(grammarAccess.getObjectBindRule()); }
	 ruleObjectBind
{ after(grammarAccess.getObjectBindRule()); } 
	 EOF 
;

// Rule ObjectBind
ruleObjectBind
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectBindAccess().getGroup()); }
(rule__ObjectBind__Group__0)
{ after(grammarAccess.getObjectBindAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportResource
entryRuleImportResource 
:
{ before(grammarAccess.getImportResourceRule()); }
	 ruleImportResource
{ after(grammarAccess.getImportResourceRule()); } 
	 EOF 
;

// Rule ImportResource
ruleImportResource
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportResourceAccess().getGroup()); }
(rule__ImportResource__Group__0)
{ after(grammarAccess.getImportResourceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule RuleRights
ruleRuleRights
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleRightsAccess().getAlternatives()); }
(rule__RuleRights__Alternatives)
{ after(grammarAccess.getRuleRightsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule RuleType
ruleRuleType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleTypeAccess().getAlternatives()); }
(rule__RuleType__Alternatives)
{ after(grammarAccess.getRuleTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ConflictResolutionTypes
ruleConflictResolutionTypes
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConflictResolutionTypesAccess().getAlternatives()); }
(rule__ConflictResolutionTypes__Alternatives)
{ after(grammarAccess.getConflictResolutionTypesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Role__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getUserParserRuleCall_0()); }
	ruleUser
{ after(grammarAccess.getRoleAccess().getUserParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRoleAccess().getGroupParserRuleCall_1()); }
	ruleGroup
{ after(grammarAccess.getRoleAccess().getGroupParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Bind__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindAccess().getObjectBindParserRuleCall_0()); }
	ruleObjectBind
{ after(grammarAccess.getBindAccess().getObjectBindParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBindAccess().getValueBindParserRuleCall_1()); }
	ruleValueBind
{ after(grammarAccess.getBindAccess().getValueBindParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getBindAccess().getRoleBindParserRuleCall_2()); }
	ruleRoleBind
{ after(grammarAccess.getBindAccess().getRoleBindParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleRights__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleRightsAccess().getReadEnumLiteralDeclaration_0()); }
(	'R' 
)
{ after(grammarAccess.getRuleRightsAccess().getReadEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getRuleRightsAccess().getWriteEnumLiteralDeclaration_1()); }
(	'W' 
)
{ after(grammarAccess.getRuleRightsAccess().getWriteEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getRuleRightsAccess().getReadWriteEnumLiteralDeclaration_2()); }
(	'RW' 
)
{ after(grammarAccess.getRuleRightsAccess().getReadWriteEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RuleType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleTypeAccess().getDenyEnumLiteralDeclaration_0()); }
(	'deny' 
)
{ after(grammarAccess.getRuleTypeAccess().getDenyEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getRuleTypeAccess().getPermitEnumLiteralDeclaration_1()); }
(	'permit' 
)
{ after(grammarAccess.getRuleTypeAccess().getPermitEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getRuleTypeAccess().getObfuscateEnumLiteralDeclaration_2()); }
(	'obfuscate' 
)
{ after(grammarAccess.getRuleTypeAccess().getObfuscateEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConflictResolutionTypes__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConflictResolutionTypesAccess().getDenyOverridesEnumLiteralDeclaration_0()); }
(	'deny-overrides' 
)
{ after(grammarAccess.getConflictResolutionTypesAccess().getDenyOverridesEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getConflictResolutionTypesAccess().getPermitOverridesEnumLiteralDeclaration_1()); }
(	'permit-overrides' 
)
{ after(grammarAccess.getConflictResolutionTypesAccess().getPermitOverridesEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getConflictResolutionTypesAccess().getFirstApplicableEnumLiteralDeclaration_2()); }
(	'first-applicable' 
)
{ after(grammarAccess.getConflictResolutionTypesAccess().getFirstApplicableEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getConflictResolutionTypesAccess().getOnlyOneApplicablePolicyEnumLiteralDeclaration_3()); }
(	'only-one-applicable-policy' 
)
{ after(grammarAccess.getConflictResolutionTypesAccess().getOnlyOneApplicablePolicyEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getConflictResolutionTypesAccess().getOrderedDenyOverridesEnumLiteralDeclaration_4()); }
(	'ordered-deny-overrides' 
)
{ after(grammarAccess.getConflictResolutionTypesAccess().getOrderedDenyOverridesEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getConflictResolutionTypesAccess().getOrderedPermitOverridesEnumLiteralDeclaration_5()); }
(	'ordered-permit-overrides' 
)
{ after(grammarAccess.getConflictResolutionTypesAccess().getOrderedPermitOverridesEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getConflictResolutionTypesAccess().getDenyUnlessPermitEnumLiteralDeclaration_6()); }
(	'deny-unless-permit' 
)
{ after(grammarAccess.getConflictResolutionTypesAccess().getDenyUnlessPermitEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getConflictResolutionTypesAccess().getPermitUnlessDenyEnumLiteralDeclaration_7()); }
(	'permit-unless-permit' 
)
{ after(grammarAccess.getConflictResolutionTypesAccess().getPermitUnlessDenyEnumLiteralDeclaration_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__AccessControlModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessControlModel__Group__0__Impl
	rule__AccessControlModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessControlModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessControlModelAccess().getRolesAssignment_0()); }
(rule__AccessControlModel__RolesAssignment_0)*
{ after(grammarAccess.getAccessControlModelAccess().getRolesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AccessControlModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AccessControlModel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AccessControlModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessControlModelAccess().getPolicyAssignment_1()); }
(rule__AccessControlModel__PolicyAssignment_1)
{ after(grammarAccess.getAccessControlModelAccess().getPolicyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__User__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__User__Group__0__Impl
	rule__User__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__User__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserAccess().getUserKeyword_0()); }

	'user' 

{ after(grammarAccess.getUserAccess().getUserKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__User__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__User__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__User__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserAccess().getNameAssignment_1()); }
(rule__User__NameAssignment_1)
{ after(grammarAccess.getUserAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Group__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__0__Impl
	rule__Group__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getGroupKeyword_0()); }

	'group' 

{ after(grammarAccess.getGroupAccess().getGroupKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__1__Impl
	rule__Group__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getNameAssignment_1()); }
(rule__Group__NameAssignment_1)
{ after(grammarAccess.getGroupAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__2__Impl
	rule__Group__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getGroupAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__3__Impl
	rule__Group__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getUsersAssignment_3()); }
(rule__Group__UsersAssignment_3)*
{ after(grammarAccess.getGroupAccess().getUsersAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getGroupAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Policy__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Policy__Group__0__Impl
	rule__Policy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicyAccess().getPolicyKeyword_0()); }

	'policy' 

{ after(grammarAccess.getPolicyAccess().getPolicyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Policy__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Policy__Group__1__Impl
	rule__Policy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicyAccess().getNameAssignment_1()); }
(rule__Policy__NameAssignment_1)
{ after(grammarAccess.getPolicyAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Policy__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Policy__Group__2__Impl
	rule__Policy__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicyAccess().getTypeAssignment_2()); }
(rule__Policy__TypeAssignment_2)
{ after(grammarAccess.getPolicyAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Policy__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Policy__Group__3__Impl
	rule__Policy__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPolicyAccess().getRolesAssignment_3()); }
(rule__Policy__RolesAssignment_3)
{ after(grammarAccess.getPolicyAccess().getRolesAssignment_3()); }
)
(
{ before(grammarAccess.getPolicyAccess().getRolesAssignment_3()); }
(rule__Policy__RolesAssignment_3)*
{ after(grammarAccess.getPolicyAccess().getRolesAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Policy__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Policy__Group__4__Impl
	rule__Policy__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicyAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getPolicyAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Policy__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Policy__Group__5__Impl
	rule__Policy__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicyAccess().getImportsAssignment_5()); }
(rule__Policy__ImportsAssignment_5)*
{ after(grammarAccess.getPolicyAccess().getImportsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Policy__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Policy__Group__6__Impl
	rule__Policy__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicyAccess().getRulesAssignment_6()); }
(rule__Policy__RulesAssignment_6)*
{ after(grammarAccess.getPolicyAccess().getRulesAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Policy__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Policy__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicyAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getPolicyAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Rule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getRuleKeyword_0()); }

	'rule' 

{ after(grammarAccess.getRuleAccess().getRuleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getNameAssignment_1()); }
(rule__Rule__NameAssignment_1)
{ after(grammarAccess.getRuleAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__2__Impl
	rule__Rule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getTypeAssignment_2()); }
(rule__Rule__TypeAssignment_2)
{ after(grammarAccess.getRuleAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__3__Impl
	rule__Rule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getRightsAssignment_3()); }
(rule__Rule__RightsAssignment_3)
{ after(grammarAccess.getRuleAccess().getRightsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__4__Impl
	rule__Rule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__5__Impl
	rule__Rule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getQueryKeyword_5()); }

	'query' 

{ after(grammarAccess.getRuleAccess().getQueryKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__6__Impl
	rule__Rule__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getPatternAssignment_6()); }
(rule__Rule__PatternAssignment_6)
{ after(grammarAccess.getRuleAccess().getPatternAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__7__Impl
	rule__Rule__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getSemicolonKeyword_7()); }
(
	';' 
)?
{ after(grammarAccess.getRuleAccess().getSemicolonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__8__Impl
	rule__Rule__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getBindingsAssignment_8()); }
(rule__Rule__BindingsAssignment_8)*
{ after(grammarAccess.getRuleAccess().getBindingsAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rule__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Binding__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binding__Group__0__Impl
	rule__Binding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getBindKeyword_0()); }

	'bind' 

{ after(grammarAccess.getBindingAccess().getBindKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binding__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binding__Group__1__Impl
	rule__Binding__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getParamAssignment_1()); }
(rule__Binding__ParamAssignment_1)
{ after(grammarAccess.getBindingAccess().getParamAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Binding__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Binding__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getValueAssignment_2()); }
(rule__Binding__ValueAssignment_2)
{ after(grammarAccess.getBindingAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RoleBind__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RoleBind__Group__0__Impl
	rule__RoleBind__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBind__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleBindAccess().getRKeyword_0()); }

	'r=' 

{ after(grammarAccess.getRoleBindAccess().getRKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RoleBind__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RoleBind__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBind__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleBindAccess().getRoleAssignment_1()); }
(rule__RoleBind__RoleAssignment_1)
{ after(grammarAccess.getRoleBindAccess().getRoleAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ValueBind__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueBind__Group__0__Impl
	rule__ValueBind__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueBind__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueBindAccess().getVKeyword_0()); }

	'v=' 

{ after(grammarAccess.getValueBindAccess().getVKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueBind__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueBind__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueBind__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueBindAccess().getValueAssignment_1()); }
(rule__ValueBind__ValueAssignment_1)
{ after(grammarAccess.getValueBindAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ObjectBind__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectBind__Group__0__Impl
	rule__ObjectBind__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectBind__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectBindAccess().getOKeyword_0()); }

	'o=' 

{ after(grammarAccess.getObjectBindAccess().getOKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectBind__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectBind__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectBind__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectBindAccess().getObjectAssignment_1()); }
(rule__ObjectBind__ObjectAssignment_1)
{ after(grammarAccess.getObjectBindAccess().getObjectAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImportResource__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportResource__Group__0__Impl
	rule__ImportResource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportResource__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportResourceAccess().getResourceKeyword_0()); }

	'resource' 

{ after(grammarAccess.getImportResourceAccess().getResourceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportResource__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportResource__Group__1__Impl
	rule__ImportResource__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportResource__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportResourceAccess().getImportURIAssignment_1()); }
(rule__ImportResource__ImportURIAssignment_1)
{ after(grammarAccess.getImportResourceAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportResource__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportResource__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportResource__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportResourceAccess().getSemicolonKeyword_2()); }
(
	';' 
)?
{ after(grammarAccess.getImportResourceAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__AccessControlModel__RolesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessControlModelAccess().getRolesRoleParserRuleCall_0_0()); }
	ruleRole{ after(grammarAccess.getAccessControlModelAccess().getRolesRoleParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AccessControlModel__PolicyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessControlModelAccess().getPolicyPolicyParserRuleCall_1_0()); }
	rulePolicy{ after(grammarAccess.getAccessControlModelAccess().getPolicyPolicyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__User__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getUserAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getGroupAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group__UsersAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getUsersUserCrossReference_3_0()); }
(
{ before(grammarAccess.getGroupAccess().getUsersUserIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getGroupAccess().getUsersUserIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getGroupAccess().getUsersUserCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicyAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPolicyAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicyAccess().getTypeConflictResolutionTypesEnumRuleCall_2_0()); }
	ruleConflictResolutionTypes{ after(grammarAccess.getPolicyAccess().getTypeConflictResolutionTypesEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__RolesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicyAccess().getRolesRoleCrossReference_3_0()); }
(
{ before(grammarAccess.getPolicyAccess().getRolesRoleIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getPolicyAccess().getRolesRoleIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getPolicyAccess().getRolesRoleCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__ImportsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicyAccess().getImportsImportResourceParserRuleCall_5_0()); }
	ruleImportResource{ after(grammarAccess.getPolicyAccess().getImportsImportResourceParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__RulesAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPolicyAccess().getRulesRuleParserRuleCall_6_0()); }
	ruleRule{ after(grammarAccess.getPolicyAccess().getRulesRuleParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getTypeRuleTypeEnumRuleCall_2_0()); }
	ruleRuleType{ after(grammarAccess.getRuleAccess().getTypeRuleTypeEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__RightsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getRightsRuleRightsEnumRuleCall_3_0()); }
	ruleRuleRights{ after(grammarAccess.getRuleAccess().getRightsRuleRightsEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__PatternAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getPatternPatternCrossReference_6_0()); }
(
{ before(grammarAccess.getRuleAccess().getPatternPatternSTRINGTerminalRuleCall_6_0_1()); }
	RULE_STRING{ after(grammarAccess.getRuleAccess().getPatternPatternSTRINGTerminalRuleCall_6_0_1()); }
)
{ after(grammarAccess.getRuleAccess().getPatternPatternCrossReference_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__BindingsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRuleAccess().getBindingsBindingParserRuleCall_8_0()); }
	ruleBinding{ after(grammarAccess.getRuleAccess().getBindingsBindingParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__ParamAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getParamVariableCrossReference_1_0()); }
(
{ before(grammarAccess.getBindingAccess().getParamVariableIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getBindingAccess().getParamVariableIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getBindingAccess().getParamVariableCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBindingAccess().getValueBindParserRuleCall_2_0()); }
	ruleBind{ after(grammarAccess.getBindingAccess().getValueBindParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RoleBind__RoleAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleBindAccess().getRoleRoleCrossReference_1_0()); }
(
{ before(grammarAccess.getRoleBindAccess().getRoleRoleIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getRoleBindAccess().getRoleRoleIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRoleBindAccess().getRoleRoleCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueBind__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueBindAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getValueBindAccess().getValueSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectBind__ObjectAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectBindAccess().getObjectEObjectCrossReference_1_0()); }
(
{ before(grammarAccess.getObjectBindAccess().getObjectEObjectIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getObjectBindAccess().getObjectEObjectIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getObjectBindAccess().getObjectEObjectCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportResource__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportResourceAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportResourceAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


